plugins {
	id 'org.springframework.boot' version '3.0.4'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'java'
	id 'idea'
}

group = 'io.dondany'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

jar{
	enabled = false
	archivesBaseName = 'flash-cards-app'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'

	compileOnly 'org.projectlombok:lombok'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
	runtimeOnly 'org.postgresql:postgresql'
}

apply plugin: 'idea'

tasks.named('test') {
	useJUnitPlatform()
}

task cleanJar(type: Delete) {
	delete 'docker/backend/files'
}

task cleanWeb(type: Delete) {
	delete 'docker/frontend/files/web'
}

task copyJar(type: Copy) {
	from 'build/libs' // The directory where the JAR is located after building
	into 'docker/backend/files' // backend docker files
	include '*.jar' // Include only JAR files
}

task copyWeb(type: Copy) {
	from 'src/main/web/dist/web' // The directory where the built frontend app resides
	into 'docker/frontend/files/web'  // frontend docker files
	include '*'
}

task ngBuild(type: Exec) {
	workingDir 'src/main/web' // Set the working directory to the project root
	commandLine 'npm.cmd', 'run', "build" // Use 'ng build'
}


copyJar.dependsOn cleanJar
copyWeb.dependsOn cleanWeb
bootJar.dependsOn copyJar, ngBuild, copyWeb



